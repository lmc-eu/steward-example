<?php

namespace My;

use Lmc\Steward\Component\Legacy;

/**
 * This is en example test showing how you could declare dependency between two test-cases.
 * This test-case will be started after test-case defined in @delayAfter finishes, and after delay
 * defined in @delayMinutes.
 *
 * This test also show usage of Legacy component - here we read data created by other test.
 *
 * Typical usage is when you wait until some data created in previous test appears on the GUI (ag. after fulltext
 * is reindexed) and you could test your expectations.
 *
 * @delayAfter My\SeedDataTest
 * @delayMinutes 0.1
 */
class DelayedExampleTest extends MyAbstractTestCase
{
    /** @var array */
    private $data;

    /**
     * @before
     */
    public function init()
    {
        // Load the data created and stored by some other test
        $this->data = (new Legacy($this))
            ->loadWithName(SeedDataTest::SEED_DATA_LEGACY_NAME);
    }

    /**
     * Please note that this is just an example test showing usage of the Legacy component, and using selectors
     * right in the test body is bad-practice - in your real-world tests use the page object pattern instead.
     */
    public function testShouldReturnSearchResults()
    {
        $this->wd->get('https://google.com');

        // Search for the name generated by the SeedDataTest.
        $queryInput = $this->waitForName('q');
        $queryInput->sendKeys($this->data['name'])
            ->submit();

        // Wait until the name appears in page title, meaning the results page is loaded
        $this->waitForPartialTitle($this->data['name']);
    }
}
